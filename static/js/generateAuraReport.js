// generateAuraReport.js

// Nur EINMAL ganz oben

// Mapping für spätere Icons (optional)
const modalityIcons = {
  visual: "/icons/visual.png",
  sensory: "/icons/sensory.png",
  speech: "/icons/speech.png",
  motor: "/icons/motor.png",
  brainstem: "/icons/brainstem.png",
  retinal: "/icons/retinal.png",
  other: "/icons/other.png",
};

// ----- Gemeinsame Komponenten -----

async function drawHeader(doc, title = "Migraine Aura Report") {
  doc.setFontSize(14);
  doc.setFont("helvetica", "bold");
  doc.text(title, 20, 20);

  try {
    const logoUrl = "/images/report-logo.png";
    const base64Logo = await loadImageAsBase64(logoUrl);

    // Lade Bild in <img> um Höhe zu ermitteln
    const img = new Image();
    img.src = logoUrl;
    await new Promise((res, rej) => {
      img.onload = res;
      img.onerror = rej;
    });

    const displayWidth = 40; // mm
    const aspectRatio = img.width / img.height;
    const displayHeight = displayWidth / aspectRatio;

    doc.addImage(base64Logo, "PNG", 150, 10, displayWidth, displayHeight);
  } catch (e) {
    console.warn("Could not load logo image:", e);
  }

  doc.line(20, 28, 190, 28);
}

function drawFooter(doc) {
  const pageHeight = doc.internal.pageSize.getHeight();

  doc.setFontSize(8);
  doc.setTextColor(120);
  doc.setFont("helvetica", "normal");

  doc.text("Generated by Migraine Aura Foundation", 20, pageHeight - 10);
  doc.text("www.migraine-aura.org", 150, pageHeight - 10, { align: "right" });

  doc.setFontSize(7);
  doc.setTextColor(150);
  doc.text(
    "This assessment is not a diagnosis. See full disclaimer on last page.",
    20,
    pageHeight - 5,
  );
}

function drawWarningBlock(doc, yStart = 35) {
  doc.setFontSize(10);
  doc.setTextColor(200, 0, 0);
  doc.text(
    "This report is informational only and not a medical diagnosis.",
    20,
    yStart,
  );
  doc.setTextColor(0, 0, 0);
  return yStart + 10;
}

// ----- Inhalt je nach Flow -----

function buildOtherOnlyContent(doc, data, yStart) {
  doc.setFontSize(11);
  doc.setFont("helvetica", "normal");
  doc.text("Described 'Other' Aura Symptom:", 20, yStart);
  const text = data.otherDescription || "[No description provided]";
  doc.setFont("helvetica", "italic");
  doc.text(doc.splitTextToSize(text, 170), 25, yStart + 10);
}

function buildPlusOtherContent(doc, data, yStart) {
  doc.setFontSize(11);
  doc.setFont("helvetica", "normal");
  doc.text("Selected Modalities:", 20, yStart);

  let y = yStart + 10;
  data.modalities.forEach((modality) => {
    doc.text("• " + modality, 25, y);
    y += 8;
  });

  doc.text("Described 'Other' Aura Symptom:", 20, y + 5);
  const text = data.otherDescription || "[No description provided]";
  doc.setFont("helvetica", "italic");
  doc.text(doc.splitTextToSize(text, 170), 25, y + 15);
}

function drawSelectedModalities(doc, modalities, yStart = 35) {
  doc.setFont("helvetica", "bold");
  doc.setFontSize(11);
  doc.text("Selected Aura Modalities", 20, yStart);

  doc.setFont("helvetica", "normal");
  doc.setFontSize(10);

  const labels = {
    visual: "Visual",
    sensory: "Sensory",
    speech: "Speech and/or Language",
    motor: "Motor",
    brainstem: "Brainstem",
    retinal: "Retinal",
    other: "Other",
  };

  const items = modalities.map((m) => `• ${labels[m] || m}`);
  doc.text(items, 25, yStart + 8);

  return yStart + 8 + items.length * 6;
}

function buildStandardAuraContent(doc, data, yStart) {
  const char = data.characteristics || {};
  let y = yStart;
  const lineSpacing = 12;

  const fields = [
    {
      label: "Progression",
      text: "At least one aura symptom spreads gradually over 5 minutes or longer",
      value: char.progression,
    },
    {
      label: "Succession",
      text: "Two or more aura symptoms occur in succession",
      value: char.succession,
    },
    {
      label: "Duration",
      text: "Each individual aura symptom lasts 5–60 minutes",
      value: char.duration,
    },
    {
      label: "Laterality",
      text: "At least one aura symptom is unilateral",
      value: char.laterality,
    },
    {
      label: "Positive/Negative",
      text: "At least one aura symptom is positive",
      value: char.positive,
    },
    {
      label: "Headache",
      text: "The aura is accompanied, or followed within 60 minutes, by headache",
      value: char.headacheOnset,
    },
  ];

  doc.setFontSize(12);
  doc.setFont("helvetica", "bold");
  doc.text("Aura Characteristics", 20, y);
  y += 8;

  fields.forEach((item) => {
    const answerSymbol = item.value ? "Yes" : "No";
    const answerColor = item.value ? [0, 150, 0] : [200, 0, 0];

    // Label & answer
    doc.setFont("helvetica", "bold");
    doc.setFontSize(10);
    doc.setTextColor(0);
    doc.text(`${item.label}:`, 20, y);

    doc.setFont("helvetica", "normal");
    doc.setTextColor(...answerColor);
    doc.text(answerSymbol, 55, y);

    // Explanation text
    doc.setFontSize(9);
    doc.setTextColor(0);
    const lines = doc.splitTextToSize(item.text, 170);
    doc.text(lines, 25, y + 5);

    y += lineSpacing + (lines.length - 1) * 5 + 2;
  });

  const passedCount = fields.filter((f) => f.value === true).length;

  y += 5;
  doc.setFont("helvetica", "bold");
  doc.setFontSize(11);
  if (passedCount >= 3) {
    doc.setTextColor(0, 150, 0); // Grün
  } else {
    doc.setTextColor(200, 0, 0); // Rot
  }
  const summaryText = `You meet ${passedCount} out of 6 clinical characteristics for migraine aura (C criterion).`;
  const summaryLines = doc.splitTextToSize(summaryText, 170);
  doc.text(summaryLines, 20, y);

  doc.setTextColor(0); // reset
}

async function loadImageAsBase64(url) {
  return new Promise((resolve, reject) => {
    const img = new Image();
    img.crossOrigin = "anonymous";
    img.onload = function () {
      const canvas = document.createElement("canvas");
      canvas.width = img.width;
      canvas.height = img.height;
      const ctx = canvas.getContext("2d");
      ctx.drawImage(img, 0, 0);
      resolve(canvas.toDataURL("image/png"));
    };
    img.onerror = reject;
    img.src = url;
  });
}

function appendDisclaimerPage(doc) {
  doc.addPage();
  doc.setFontSize(12);
  doc.setTextColor(0);
  doc.setFont("helvetica", "bold");
  doc.text("⚠️ Disclaimer", 20, 30);

  doc.setFont("helvetica", "normal");
  doc.setFontSize(10);

  const lines = doc.splitTextToSize(
    `This assessment was conducted using a self-report screening tool developed by the Migraine Aura Foundation. It is not a medical diagnosis and is intended for informational purposes only.

Neurological symptoms can have many different causes — some of them serious. This assessment assumes that your symptoms are not better explained by another medical condition, such as epilepsy, stroke, multiple sclerosis, or a known eye disorder.

If your symptoms are new, unusual, worsening, or occur alongside other health issues, please seek medical advice immediately.`,
    170,
  );

  doc.text(lines, 20, 45);
}

// ----- Hauptfunktion -----

async function generateAuraReport(flowType, data) {
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF(); // <-- Jetzt korrekt deklariert!

  await drawHeader(doc);
  let y = drawWarningBlock(doc);

  //y = drawSelectedModalities(doc, data.modalities || [], y + 5);

  if (flowType === "other-only") {
    buildOtherOnlyContent(doc, data, y);
  } else if (flowType === "plus-other") {
    buildPlusOtherContent(doc, data, y);
  } else if (flowType === "standard") {
    buildStandardAuraContent(doc, data, y);
  } else {
    doc.text("Unknown flow type.", 20, y);
  }

  drawFooter(doc);
  appendDisclaimerPage(doc); // ⬅️ neue Seite einfügen
  doc.save("aura_report.pdf");
}
